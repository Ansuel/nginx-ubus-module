name: "CodeQL"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '31 12 * * 1'

jobs:
  analyze:
    name: Analyze
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners
    # Consider using larger runners for possible analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      # required for all workflows
      security-events: write

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'c-cpp' ]
        # CodeQL supports [ 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift' ]
        # Use only 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use only 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Install Dependency
      run: |
        sudo apt update && sudo apt install libjson-c-dev libpcre3-dev zlib1g-dev

    - name: Install libubox
      run: |
        git clone	--depth=1 https://git.openwrt.org/project/libubox.git

        cd libubox
        cmake -DBUILD_LUA=OFF -DBUILD_EXAMPLES=OFF
        make
        sudo make install

    - name: Install libubus
      run: |
        git clone	--depth=1 https://git.openwrt.org/project/ubus.git

        cd ubus
        cmake -DBUILD_LUA=OFF -DBUILD_EXAMPLES=OFF
        make
        sudo make install

    # From: https://stackoverflow.com/questions/22510705/get-the-latest-download-link-programmatically
    - name: Determine latest NGINX version
      id: determine_nginx_version
      run: |
        # Determine the latest stable version's download URL, assumed to be 
        # the first `/download/nginx-*.tar.gz`-like link following the header 
        # "Stable version".
        NGINX_VERSION=$(curl -s 'http://nginx.org/en/download.html' | 
          sed 's/</\'$'\n''</g' | sed -n '/>Stable version$/,$ p' | 
          egrep -m1 -o '/download/nginx-.+\.tar\.gz' |
          sed 's/^\/download\/nginx-//' | sed 's/\.tar.gz$//')

        echo "nginx_version=$NGINX_VERSION" >> $GITHUB_OUTPUT

    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        queries: security-and-quality

    # ℹ️ Command-line programs to run using the OS shell.
    # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines.
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.
    - name: Compile Nginx
      env:
        NGINX_VERSION: ${{ steps.determine_nginx_version.outputs.nginx_version }}
      run: |
        curl "http://nginx.org/download/nginx-${{ env.NGINX_VERSION }}.tar.gz" > nginx-${{ env.NGINX_VERSION }}.tar.gz
        tar -xf nginx-${{ env.NGINX_VERSION }}.tar.gz

        cd nginx-${{ env.NGINX_VERSION }}
        ./configure --with-threads --add-dynamic-module=../
        make modules

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
